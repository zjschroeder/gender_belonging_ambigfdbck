data_study1$self_rank = 6-data_study1$self_rank
# subsetting data
data_study_1 <- data_study1 %>%
select(condition, age, gender, race, interaction_perception, social_belonging, intellectual_belonging, class_choice, self_rank, major)
# Chunk 7: Study 2 Data Import and Cleaning
# Import Spring 2020 data
data_study2 <- import(here::here("Data", "ZS.S20GS.xlsx"), setclass = "tb_df")
#rename columns
colnames(data_study2) <- c("duration", "finished", "date",
"feedback_perc", "prof_conf", "encourag",
"self_valence", "class_choice", "prof_relat",
"self_rank",
"sob_1", "sob_2", "sob_3", "sob_4", "sob_5",
"sob_6", "sob_7", "sob_8", "sob_9", "sob_10",
"sob_11", "sob_12", "sob_13", "sob_14", "sob_15",
"sob_16", "sob_17", "sob_18",
"aus_1", "aus_2", "aus_3", "aus_4",
"aus_5", "aus_6", "aus_7", "aus_8",
"aus_9", "aus_10", "aus_11", "aus_12",
"sob_19", "sob_20",
"major", "dom_intl_student", "age",
"gender", "gender_spec",
"race", "race_spec",
"duration_total", "ID")
table(data_study2$gender)
data_study2 <- data_study2 %>%
mutate(
self_rank = factor(data_study2$self_rank,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("In the top 5 best students (Better than 95 other students)",
"In the top 10 best students (Better than 90 other students)",
"In the top 30 best students (Better than 70 other students)",
"Around the middle of the class (not the top 30 students nor
the bottom 30 students. One of 40 students in the middle)",
"In the 30 worst students (70 other students are better than you)",
"In the 10 worst students (90 other students are better than you)")),
gender = factor(gender, labels = c("Female", "Male", "NA", "NA")),
class_choice = factor(class_choice,
levels = c("1", "2", "3"), labels = c("easy_major", "hard_major", "easy_non")),
interaction_perception = rowMeans(data_study2 %>% select(feedback_perc, prof_relat, prof_conf, self_valence), na.rm = TRUE)
)
#Likert scales were entered in as 1,2,3,6,7; recoding to reflect the actual values
data_study2[,11:42][data_study2[,11:42] == 6] <- 4
data_study2[,11:42][data_study2[,11:42] == 7] <- 5
# Chunk 8: Study 2 SOB and AUS
### SOB
sob_key <- c(1, -1, 1, 1,
-1, 1, -1, -1,
1, 1, -1, -1,
1, -1, 1, 1,
1, 1,
1, 1)
sob_spring <- data_study2 %>% select(starts_with("sob"))
sob_spring <- psych::reverse.code(data_study2 %>% select(starts_with("sob")),
keys = sob_key)
### AUS
aus_key <- c(-1, -1, 1, -1,
1, -1, -1, 1,
-1, 1, 1, -1)
aus_spring <- data_study2 %>% select(starts_with("aus"))
aus_spring <- psych::reverse.code(data_study2 %>% select(starts_with("aus")),
keys = aus_key)
data_study2 <- data_study2 %>%
mutate(
intellectual_belonging = rowMeans(aus_spring, na.rm = TRUE),
social_belonging = rowMeans(sob_spring, na.rm = TRUE)
)
data_study2 <- droplevels(data_study2[!data_study2$gender == 'NA',])
# Chunk 9: Study 2 Dataframe
# ALPHAS
study_2_scale_alphas <- list(
intellectual_belonging = psych::alpha(aus_spring)$total$raw_alpha,
social_belonging = psych::alpha(sob_spring)$total$raw_alpha,
interaction_perception = psych::alpha(data_study2 %>%
select(feedback_perc, prof_relat,
prof_conf, self_valence))$total$raw_alpha
)
# Smaller tibble
data_study_2 <- data_study2 %>%
select(age, gender, race, interaction_perception, social_belonging, intellectual_belonging,
class_choice, self_rank, major)
# Chunk 10: Study 2 Race
data_study_2$race <- factor(as.character(data_study_2$race),
levels = c("1", "8", "9", "10", "12",
"14", "16", "17", "18"),
labels = c("other", "aapi", "black",
"latinx", "other", "aapi",
"white", "other", "NA"))
# Chunk 11: Study 2 Filter missing
data_study_2 <- data_study_2 %>% filter(!is.na(interaction_perception))
# Chunk 12: Global Envir Cleanup
rm(aus, aus_spring, data, data_spring, dataf, dataw, faclab, interaction_perception, sob, sob_spring,
data_study1, data_study1_winter_conditions, data_study1_fall, data_study1_winter, data_study2)
# Chunk 13: Study 3 Import and Cleaning
data_study3_summer = import(here::here("Data", "ZS_GS_Summer2020.coded.xlsx"), setclass = "tb_df") %>%
characterize() %>%
clean_names()
data_study3_fall = import(here::here("Data", "ZS.F20.coded.xlsx"), setclass = "tb_df") %>%
characterize() %>%
clean_names()
# Chunk 14: Study 3 Cleaning
colnames(data_study3_summer) <- c("date", "ID", "age", "gender", "gender_desc", "race", "race_desc",
"inxn_desc", "scenario_thoughts", "typical_feelings", "imagined_feelings",
"grade", "course", "f_val", "f_conf", "f_encourag", "f_int", "class_e", "class_d", "class_nm", "f_rel", "percent", "major", "citizen", "prof_gender",
"aus1", "aus2", "aus3", "aus4", "aus5", "aus6", "aus7", "aus8", "aus9", "aus10", "aus11", "aus12",
"sob1", "sob2", "sob3", "sob4", "sob5", "sob6", "sob7", "sob8", "sob9", "sob10",
"sob11", "sob12", "sob13", "sob14", "sob15", "sob16", "sob17", "sob18", "sob19", "sob20",
"sob21", "sob22", "sob23", "sob24", "sob25", "sob26", "sob27", "sob28", "sob29", "sob30", "stem_class")
colnames(data_study3_fall) <- c("date", "ID",
"inxn_desc", "scenario_thoughts", "typical_feelings", "imagined_feelings",
"grade", "course", "f_val", "f_conf", "f_encourag", "f_int", "class_e", "class_d", "class_nm", "f_rel", "percent", "major", "citizen", "prof_gender",
"aus1", "aus2", "aus3", "aus4", "aus5", "aus6", "aus7", "aus8", "aus9", "aus10", "aus11", "aus12",
"sob1", "sob2", "sob3", "sob4", "sob5", "sob6", "sob7", "sob8", "sob9", "sob10",
"sob11", "sob12", "sob13", "sob14", "sob15", "sob16", "sob17", "sob18", "sob19", "sob20",
"sob21", "sob22", "sob23", "sob24", "sob25", "sob26", "sob27", "sob28", "sob29", "sob30",
"sapa1", "sapa2", "sapa3", "sapa4", "sapa5", "sapa6", "sapa7", "sapa8", "sapa9", "sapa10",
"sapa11", "sapa12", "sapa13", "sapa14", "sapa15", "sapa16", "sapa17", "sapa18", "sapa19", "sapa20",
"age", "gender", "gender_desc", "race", "race_desc", "stem_class")
# Chunk 15: Study 3 Categorical Var Cleaning
# RACE LEVELS
data_study3_summer$race <- factor(data_study3_summer$race,
levels = c(1, 8, 9, 10, 14, 16, 17, 18),
labels = c("indig", "asian",  "black",  "latinx", "pacisl", "white", "other", "no_ans"))
data_study3_fall$race <- factor(data_study3_fall$race,
levels = c(1, 8, 9, 10, 12, 14, 16, 17, 18),
labels = c("indig", "asian",  "black",  "latinx", "meast", "pacisl", "white", "other", "no_ans"))
pre_g_cut1 <- table(data_study3_summer$gender)
pre_g_cut <- table(data_study3_fall$gender)
# GENDER LEVELS
data_study3_summer <- data_study3_summer %>%
filter(gender < 3)
data_study3_summer$gender <- factor(data_study3_summer$gender,
levels = c(1, 2),
labels = c("Women", "Men"))
data_study3_fall <- data_study3_fall %>%
filter(gender < 3)
data_study3_fall$gender <- factor(data_study3_fall$gender,
levels = c(1, 2),
labels = c("Women", "Men"))
# Chunk 16: Study 3 Continuous Var Cleaning
# REVERSE CODED VARIABLES
sob_key <- c(1, 1, 1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1)
aus_key <- c(-1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1)
# Social Belonging
study_3_sob <- rbind(data_study3_summer %>% select(starts_with("sob")), data_study3_fall %>% select(starts_with("sob")))
study_3_sob <- reverse.code(sob_key, study_3_sob)
# Intellectual Belonging
study_3_aus <- rbind(data_study3_summer %>% select(starts_with("aus")), data_study3_fall %>% select(starts_with("aus")))
study_3_aus <- reverse.code(aus_key, rbind(data_study3_summer %>% select(starts_with("aus")), data_study3_fall %>% select(starts_with("aus"))))
# Interaction Perception
study_2_interactin_perception <- rbind(data_study3_summer %>% select(f_val, f_conf, f_int, f_rel),
data_study3_fall %>% select(f_val, f_conf, f_int, f_rel))
study_3_scale_alphas <- list(
intellectual_belonging = psych::alpha(study_3_aus)$total$raw_alpha,
social_belonging = psych::alpha(study_3_sob)$total$raw_alpha,
interaction_perception = psych::alpha(study_2_interactin_perception)$total$raw_alpha
)
# Chunk 17: Combined DF for Study 3 Cleaning
data_study3_summer <- data_study3_summer %>%
select(age, gender, race, inxn_desc,
scenario_thoughts, typical_feelings, imagined_feelings,
grade, course, stem_class, class_e, class_d, class_nm, percent, major,
prof_gender, course)
data_study3_fall <- data_study3_fall %>%
select(age, gender, race, inxn_desc,
scenario_thoughts, typical_feelings, imagined_feelings,
grade, course, stem_class, class_e, class_d, class_nm, percent, major,
prof_gender, course)
d <- rbind(data_study3_summer, data_study3_fall)
d <- d %>% mutate(
intellectual_belonging = rowMeans(study_3_aus, na.rm = TRUE),
social_belonging = rowMeans(study_3_sob, na.rm = TRUE),
interaction_perception = rowMeans(study_2_interactin_perception, na.rm = TRUE)
)
# QUICK CODING PROFESSOR GENDER
d$prof_gender <- factor(d$prof_gender,
levels = c("1", "1,2", "2", "3", "4", "5"),
labels = c("Man","DoesntMatter", "Woman", "DoesntMatter", "dontKnow", "other"))
d$age <- as.numeric(d$age)
# Class Imagined Grades
d$grade <- factor(d$grade) %>%
fct_collapse(.,
Aplus = c("1"),
A = c('#95', "2", "2,"),
Amin = c('#100, #80', '#90',"3", "2, 3",
"2, 4", "2, 5", "3, 2", "3, 4",
"4, 2", "4, 3, 2, 1"),
Bplus = c('#88', '#89', "4", "4,", "4, 3", "5, 2"),
B = c('#84', '#85', "5", "5, #80, #89", "5, 4"),
Bmin = c('#80', '#80, #85', "6", "5, 6", "6, 7"),
Cplus = c("7", "5, 8", "6, 7, 8", "7, 6", "7, 8", "8, 5", "8, 6"),
C = c("#70, #80", '#74', "8"),
Cmin = c("#70", "9"),
Dplus = c("10", "8, 11"),
D = c("11", "13, 8"),
Dmin = c("12"),
Fail = c("#3.5", "#50", "13"),
remove = c("14", "15")
)
d$grade <- factor(d$grade,
levels = rev(c(
"Aplus","A","Amin",
"Bplus","B","Bmin",
"Cplus","C","Cmin",
"Dplus","D","Dmin",
"Fail","remove")))
# levels(d$grade)
gradlev <- tibble(levels(d$grade))
d$stem_class <- factor(d$stem_class,
levels = c(0, 1),
labels = c("Non-STEM", "STEM"))
# Chunk 18: Clean Study 3 Dataframe
data_study_3 <- d
data_study_3 <- data_study_3 %>% filter(!is.na(interaction_perception))
rm(d, data_study3_fall, data_study3_summer, gradlev, study_3_aus, study_2_interactin_perception, study_3_sob, data_study2_fall, data_study2_summer)
data_major <- c(data_study_1$major, data_study_2$major, data_study_3$major)
# write.csv(data_major, "major.csv")
majors <- rio::import(here::here("major_code.csv"))
majors$major_stem[is.na(majors$major_stem)] <- 1
majors$major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
levels(majors$major_stem)
table(majors$major_stem)
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))),
gender = c(data_study_1$gender, data_study_2$gender, data_study_3$gender),
social_belonging = c(data_study_1$social_belonging, data_study_2$social_belonging, data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging, data_study_2$intellectual_belonging, data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception, data_study_2$interaction_perception, data_study_3$interaction_perception),
age = c(data_study_1$age, data_study_2$age, data_study_3$age) %>% as.numeric(),
major = majors$major_stem)
data_full$gender <- forcats::fct_collapse(data_full$gender,
Women = c("Women", "Female"),
Men = c("Men", "Male"))
stem_maj <- data_full %>%
filter(as.numeric(data_full$major) > 1)
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 1))
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
names(data_full)
t.test(interaction_perception ~ major,
data = ilter(data_full$study == 3))
t.test(interaction_perception ~ major,
data = filter(data_full$study == 3))
str(data_full)
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender, data_study_2$gender, data_study_3$gender),
social_belonging = c(data_study_1$social_belonging, data_study_2$social_belonging, data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging, data_study_2$intellectual_belonging, data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception, data_study_2$interaction_perception, data_study_3$interaction_perception),
age = c(data_study_1$age, data_study_2$age, data_study_3$age) %>% as.numeric(),
major = majors$major_stem)
data_full$gender <- forcats::fct_collapse(data_full$gender,
Women = c("Women", "Female"),
Men = c("Men", "Male"))
stem_maj <- data_full %>%
filter(as.numeric(data_full$major) > 1)
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
table(data_full)
stem_maj <- data_full %>%
filter(as.numeric(data_full$major) > 1)
head(stem_maj)
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 1))
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
View(data_study_2)
View(data_study_1)
View(majors)
levels(major_stem)
levels(majors$major_stem)
#majors$major_stem[is.na(majors$major_stem)] <- 1
majors$major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
levels(majors$major_stem)
table(majors$major_stem)
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = majors$major_stem)
table(data_full$major)
str(data_full)
table(data_full$major, data_full$study)
# write.csv(data_major, "major.csv")
majors <- rio::import(here::here("major_code.csv"))
View(majors)
majors$major_stem[is.na(majors$major_stem)] <- 1
majors$major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
table(majors$major_stem)
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = majors$major_stem)
data_full$gender <- forcats::fct_collapse(data_full$gender,
Women = c("Women", "Female"),
Men = c("Men", "Male"))
table(data_full$major, data_full$study)
major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = majors$major_stem)
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = major_stem)
table(data_full$major, data_full$study)
data_major <- c(data_study_1$major, data_study_2$major, data_study_3$major)
# write.csv(data_major, "major.csv")
majors <- rio::import(here::here("major_code.csv"))
majors$major_stem[is.na(majors$major_stem)] <- 1
major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = major_stem)
View(data_full)
data_major <- c(data_study_1$major, data_study_2$major, data_study_3$major)
# write.csv(data_major, "major.csv")
majors <- rio::import(here::here("major_code.csv"))
majors$major_stem[is.na(majors$major_stem)] <- 1
major_stem <- factor(majors$major_stem, labels = c("Non-STEM", "STEM"))
data_full <- tibble(
study = c(rep(1, nrow(data_study_1)),
rep(2, nrow(data_study_2)),
rep(3, nrow(data_study_3))) %>% factor(),
gender = c(data_study_1$gender,
data_study_2$gender,
data_study_3$gender),
social_belonging = c(data_study_1$social_belonging,
data_study_2$social_belonging,
data_study_3$social_belonging),
intellectual_belonging = c(data_study_1$intellectual_belonging,
data_study_2$intellectual_belonging,
data_study_3$intellectual_belonging),
interaction_perception = c(data_study_1$interaction_perception,
data_study_2$interaction_perception,
data_study_3$interaction_perception),
age = c(data_study_1$age,
data_study_2$age,
data_study_3$age) %>% as.numeric(),
major = major_stem)
table(data_full$major, data_full$study)
data_full$gender <- forcats::fct_collapse(data_full$gender,
Women = c("Women", "Female"),
Men = c("Men", "Male"))
stem_maj <- data_full %>%
filter(as.numeric(data_full$major) > 1)
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
t.test(interaction_perception ~ major,
data = data_full %>%
filter(study == 2))
t.test(social_belonging ~ major,
data = data_full %>%
filter(study == 1))
t.test(social_belonging ~ major,
data = data_full %>%
filter(study == 2))
t.test(social_belonging ~ major,
data = data_full %>%
filter(study == 3))
t.test(intellectual_belonging ~ major,
data = data_full %>%
filter(study == 1))
t.test(intellectual_belonging ~ major,
data = data_full %>%
filter(study == 2))
t.test(intellectual_belonging ~ major,
data = data_full %>%
filter(study == 3))
interim <- data_full %>%
filter(as.numeric(data_full$major) == 2)
interim <- split(interim, f = interim$study)
interim <- lapply(interim, as_tibble)
for(i in seq_along(interim)){
interim[[i]]$social_belonging_p = pomp(interim[[i]]$social_belonging)
interim[[i]]$intellectual_belonging_p = pomp(interim[[i]]$intellectual_belonging)
interim[[i]]$interaction_perception_p = pomp(interim[[i]]$interaction_perception)
}
stem_data <- bind_rows(interim)
stem_model <- lm(interaction_perception_p ~ gender + social_belonging_p + intellectual_belonging_p,
data = stem_data)
summary(stem_model)
sjPlot::plot_model(stem_model)
interim <- data_full %>%
filter(as.numeric(data_full$major) == 2)
interim <- split(interim, f = interim$study)
interim <- lapply(interim, as_tibble)
for(i in seq_along(interim)){
interim[[i]]$social_belonging_p = pomp(interim[[i]]$social_belonging)
interim[[i]]$intellectual_belonging_p = pomp(interim[[i]]$intellectual_belonging)
interim[[i]]$interaction_perception_p = pomp(interim[[i]]$interaction_perception)
}
pomp <- function(score) {
score_p  <- (score - min(score, na.rm = T)) / (max(score, na.rm = T) - min(score, na.rm = T))
#IF ERRROR: May need to na.rm = T
return (10 * score_p)
}
interim <- data_full %>%
filter(as.numeric(data_full$major) == 2)
interim <- split(interim, f = interim$study)
interim <- lapply(interim, as_tibble)
for(i in seq_along(interim)){
interim[[i]]$social_belonging_p = pomp(interim[[i]]$social_belonging)
interim[[i]]$intellectual_belonging_p = pomp(interim[[i]]$intellectual_belonging)
interim[[i]]$interaction_perception_p = pomp(interim[[i]]$interaction_perception)
}
stem_data <- bind_rows(interim)
stem_model <- lm(interaction_perception_p ~ gender + social_belonging_p + intellectual_belonging_p,
data = stem_data)
summary(stem_model)
sjPlot::plot_model(stem_model)
describe(data_study_1$intellectual_belonging)
describe(data_study_3$intellectual_belonging)
